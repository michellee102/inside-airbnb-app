// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using insideairbnb_api.Data;

#nullable disable

namespace insideairbnb_api.Migrations
{
    [DbContext(typeof(InsideAirBnb2024Context))]
    partial class InsideAirBnb2024ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("insideairbnb_api.Models.DetailedCalendarParijsConverted", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<long>("ListingId")
                        .HasColumnType("bigint")
                        .HasColumnName("listing_id");

                    b.Property<string>("AdjustedPrice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adjusted_price");

                    b.Property<bool>("Available")
                        .HasColumnType("bit")
                        .HasColumnName("available");

                    b.Property<int?>("MaximumNights")
                        .HasColumnType("int")
                        .HasColumnName("maximum_nights");

                    b.Property<int?>("MinimumNights")
                        .HasColumnType("int")
                        .HasColumnName("minimum_nights");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("price");

                    b.HasKey("Date", "ListingId");

                    b.ToTable("Detailed_Calendar_Parijs_Converted", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.DetailedCalendarParijsRaw", b =>
                {
                    b.Property<string>("Column4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Column 4");

                    b.Property<string>("F")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("f");

                    b.Property<string>("_15000")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("$150 00");

                    b.Property<string>("_2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("2");

                    b.Property<string>("_20231212")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("2023-12-12");

                    b.Property<string>("_30")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("30");

                    b.Property<string>("_3109")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("3109");

                    b.ToTable("Detailed_Calendar_Parijs_Raw", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.DetailedListingsParij", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<byte>("Accommodates")
                        .HasColumnType("tinyint")
                        .HasColumnName("accommodates");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("amenities");

                    b.Property<int>("Availability30")
                        .HasColumnType("int")
                        .HasColumnName("availability_30");

                    b.Property<int>("Availability365")
                        .HasColumnType("int")
                        .HasColumnName("availability_365");

                    b.Property<int>("Availability60")
                        .HasColumnType("int")
                        .HasColumnName("availability_60");

                    b.Property<int>("Availability90")
                        .HasColumnType("int")
                        .HasColumnName("availability_90");

                    b.Property<string>("Bathrooms")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("bathrooms");

                    b.Property<string>("BathroomsText")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("bathrooms_text");

                    b.Property<string>("Bedrooms")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("bedrooms");

                    b.Property<byte?>("Beds")
                        .HasColumnType("tinyint")
                        .HasColumnName("beds");

                    b.Property<int>("CalculatedHostListingsCount")
                        .HasColumnType("int")
                        .HasColumnName("calculated_host_listings_count");

                    b.Property<int>("CalculatedHostListingsCountEntireHomes")
                        .HasColumnType("int")
                        .HasColumnName("calculated_host_listings_count_entire_homes");

                    b.Property<int>("CalculatedHostListingsCountPrivateRooms")
                        .HasColumnType("int")
                        .HasColumnName("calculated_host_listings_count_private_rooms");

                    b.Property<int>("CalculatedHostListingsCountSharedRooms")
                        .HasColumnType("int")
                        .HasColumnName("calculated_host_listings_count_shared_rooms");

                    b.Property<DateOnly>("CalendarLastScraped")
                        .HasColumnType("date")
                        .HasColumnName("calendar_last_scraped");

                    b.Property<string>("CalendarUpdated")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("calendar_updated");

                    b.Property<string>("Description")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("description");

                    b.Property<DateOnly?>("FirstReview")
                        .HasColumnType("date")
                        .HasColumnName("first_review");

                    b.Property<bool?>("HasAvailability")
                        .HasColumnType("bit")
                        .HasColumnName("has_availability");

                    b.Property<string>("HostAbout")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_about");

                    b.Property<string>("HostAcceptanceRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("host_acceptance_rate");

                    b.Property<bool?>("HostHasProfilePic")
                        .HasColumnType("bit")
                        .HasColumnName("host_has_profile_pic");

                    b.Property<int?>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("host_id");

                    b.Property<bool?>("HostIdentityVerified")
                        .HasColumnType("bit")
                        .HasColumnName("host_identity_verified");

                    b.Property<bool?>("HostIsSuperhost")
                        .HasColumnType("bit")
                        .HasColumnName("host_is_superhost");

                    b.Property<int?>("HostListingsCount")
                        .HasColumnType("int")
                        .HasColumnName("host_listings_count");

                    b.Property<string>("HostLocation")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_location");

                    b.Property<string>("HostName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_name");

                    b.Property<string>("HostNeighbourhood")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_neighbourhood");

                    b.Property<string>("HostPictureUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_picture_url");

                    b.Property<string>("HostResponseRate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("host_response_rate");

                    b.Property<string>("HostResponseTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("host_response_time");

                    b.Property<DateOnly?>("HostSince")
                        .HasColumnType("date")
                        .HasColumnName("host_since");

                    b.Property<string>("HostThumbnailUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_thumbnail_url");

                    b.Property<int?>("HostTotalListingsCount")
                        .HasColumnType("int")
                        .HasColumnName("host_total_listings_count");

                    b.Property<string>("HostUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_url");

                    b.Property<string>("HostVerifications")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("host_verifications");

                    b.Property<bool>("InstantBookable")
                        .HasColumnType("bit")
                        .HasColumnName("instant_bookable");

                    b.Property<DateOnly?>("LastReview")
                        .HasColumnType("date")
                        .HasColumnName("last_review");

                    b.Property<DateOnly>("LastScraped")
                        .HasColumnType("date")
                        .HasColumnName("last_scraped");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<string>("License")
                        .HasColumnType("text")
                        .HasColumnName("license");

                    b.Property<string>("ListingUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("listing_url");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<int?>("MaximumMaximumNights")
                        .HasColumnType("int")
                        .HasColumnName("maximum_maximum_nights");

                    b.Property<int?>("MaximumMinimumNights")
                        .HasColumnType("int")
                        .HasColumnName("maximum_minimum_nights");

                    b.Property<int?>("MaximumNights")
                        .HasColumnType("int")
                        .HasColumnName("maximum_nights");

                    b.Property<double?>("MaximumNightsAvgNtm")
                        .HasColumnType("float")
                        .HasColumnName("maximum_nights_avg_ntm");

                    b.Property<int?>("MinimumMaximumNights")
                        .HasColumnType("int")
                        .HasColumnName("minimum_maximum_nights");

                    b.Property<int?>("MinimumMinimumNights")
                        .HasColumnType("int")
                        .HasColumnName("minimum_minimum_nights");

                    b.Property<int?>("MinimumNights")
                        .HasColumnType("int")
                        .HasColumnName("minimum_nights");

                    b.Property<double?>("MinimumNightsAvgNtm")
                        .HasColumnType("float")
                        .HasColumnName("minimum_nights_avg_ntm");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("NeighborhoodOverview")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("neighborhood_overview");

                    b.Property<string>("Neighbourhood")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("NeighbourhoodCleansed")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("neighbourhood_cleansed");

                    b.Property<string>("NeighbourhoodGroupCleansed")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("neighbourhood_group_cleansed");

                    b.Property<int>("NumberOfReviews")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews");

                    b.Property<int>("NumberOfReviewsL30d")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews_l30d");

                    b.Property<int>("NumberOfReviewsLtm")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews_ltm");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("picture_url");

                    b.Property<string>("Price")
                        .HasColumnType("text")
                        .HasColumnName("price");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("property_type");

                    b.Property<double?>("ReviewScoresAccuracy")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_accuracy");

                    b.Property<double?>("ReviewScoresCheckin")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_checkin");

                    b.Property<double?>("ReviewScoresCleanliness")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_cleanliness");

                    b.Property<double?>("ReviewScoresCommunication")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_communication");

                    b.Property<double?>("ReviewScoresLocation")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_location");

                    b.Property<double?>("ReviewScoresRating")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_rating");

                    b.Property<double?>("ReviewScoresValue")
                        .HasColumnType("float")
                        .HasColumnName("review_scores_value");

                    b.Property<float?>("ReviewsPerMonth")
                        .HasColumnType("real")
                        .HasColumnName("reviews_per_month");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("room_type");

                    b.Property<DateTime>("ScrapeId")
                        .HasColumnType("datetime2")
                        .HasColumnName("scrape_id");

                    b.Property<string>("Source")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("source");

                    b.HasKey("Id");

                    b.ToTable("Detailed_Listings_Parijs", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.DetailedReviewsParij", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<long>("ListingId")
                        .HasColumnType("bigint")
                        .HasColumnName("listing_id");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int")
                        .HasColumnName("reviewer_id");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reviewer_name");

                    b.HasKey("Id");

                    b.ToTable("Detailed_Reviews_Parijs", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.GeoLocationInfo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__GeoLocat__3214EC0737D75C47");

                    b.ToTable("GeoLocationInfo", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.Listing", b =>
                {
                    b.Property<int>("Availability365")
                        .HasColumnType("int")
                        .HasColumnName("availability_365");

                    b.Property<int>("CalculatedHostListingsCount")
                        .HasColumnType("int")
                        .HasColumnName("calculated_host_listings_count");

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("host_id");

                    b.Property<string>("HostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("host_name");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("LastReview")
                        .HasColumnType("date")
                        .HasColumnName("last_review");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<string>("License")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("license");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<int>("MinimumNights")
                        .HasColumnType("int")
                        .HasColumnName("minimum_nights");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("NeighbourhoodGroup")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("neighbourhood_group");

                    b.Property<int>("NumberOfReviews")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews");

                    b.Property<int>("NumberOfReviewsLtm")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews_ltm");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(8, 3)")
                        .HasColumnName("price");

                    b.Property<double?>("ReviewsPerMonth")
                        .HasColumnType("float")
                        .HasColumnName("reviews_per_month");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("room_type");

                    b.ToTable("listings", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.Neighbourhood", b =>
                {
                    b.Property<string>("Neighbourhoodname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("neighbourhoodname");

                    b.Property<string>("NeighbourhoodGroup")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("neighbourhood_group");

                    b.HasKey("Neighbourhoodname");

                    b.ToTable("neighbourhoods", (string)null);
                });

            modelBuilder.Entity("insideairbnb_api.Models.Review", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<long>("ListingId")
                        .HasColumnType("bigint")
                        .HasColumnName("listing_id");

                    b.ToTable("reviews", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
